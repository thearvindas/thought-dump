{"ast":null,"code":"var _jsxFileName = \"/Users/arvindas/Projects/thought-dump/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Whiteboard from './components/Whiteboard';\nimport ChatInput from './components/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n`;\n_c = AppContainer;\nconst WhiteboardContainer = styled.div`\n  flex: 1;\n  min-height: 0; // Important for flex child\n  position: relative;\n  background-color: white;\n`;\n_c2 = WhiteboardContainer;\nconst ChatContainer = styled.div`\n  height: 100px;\n  padding: 1rem;\n  background-color: #f8f9fa;\n  border-top: 1px solid #e9ecef;\n`;\n_c3 = ChatContainer;\nconst App = () => {\n  _s();\n  const [thoughts, setThoughts] = useState([]);\n  const handleThoughtSubmit = thought => {\n    console.log('Submitting thought:', thought);\n    if (thought.startsWith('/')) {\n      // Handle commands\n      const [command, ...args] = thought.slice(1).split(' ');\n      console.log('Command:', command, 'Args:', args);\n      return;\n    }\n\n    // Add new thought\n    const newThought = {\n      id: Date.now(),\n      text: thought,\n      color: '#000000',\n      size: 'medium',\n      isPinned: false\n    };\n    console.log('Adding new thought:', newThought);\n    setThoughts(prev => [...prev, newThought]);\n  };\n  console.log('Current thoughts:', thoughts);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(WhiteboardContainer, {\n      children: /*#__PURE__*/_jsxDEV(Whiteboard, {\n        thoughts: thoughts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        onThoughtSubmit: handleThoughtSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/IyWVrBNCQ+up2K2bzGTq1jyhjA=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"WhiteboardContainer\");\n$RefreshReg$(_c3, \"ChatContainer\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","styled","Whiteboard","ChatInput","jsxDEV","_jsxDEV","AppContainer","div","_c","WhiteboardContainer","_c2","ChatContainer","_c3","App","_s","thoughts","setThoughts","handleThoughtSubmit","thought","console","log","startsWith","command","args","slice","split","newThought","id","Date","now","text","color","size","isPinned","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onThoughtSubmit","_c4","$RefreshReg$"],"sources":["/Users/arvindas/Projects/thought-dump/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Whiteboard from './components/Whiteboard';\nimport ChatInput from './components/ChatInput';\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nconst WhiteboardContainer = styled.div`\n  flex: 1;\n  min-height: 0; // Important for flex child\n  position: relative;\n  background-color: white;\n`;\n\nconst ChatContainer = styled.div`\n  height: 100px;\n  padding: 1rem;\n  background-color: #f8f9fa;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst App: React.FC = () => {\n  const [thoughts, setThoughts] = useState<Array<{\n    id: number;\n    text: string;\n    color: string;\n    size: 'small' | 'medium' | 'large';\n    isPinned: boolean;\n  }>>([]);\n\n  const handleThoughtSubmit = (thought: string) => {\n    console.log('Submitting thought:', thought);\n    \n    if (thought.startsWith('/')) {\n      // Handle commands\n      const [command, ...args] = thought.slice(1).split(' ');\n      console.log('Command:', command, 'Args:', args);\n      return;\n    }\n\n    // Add new thought\n    const newThought = {\n      id: Date.now(),\n      text: thought,\n      color: '#000000',\n      size: 'medium' as const,\n      isPinned: false,\n    };\n\n    console.log('Adding new thought:', newThought);\n    setThoughts(prev => [...prev, newThought]);\n  };\n\n  console.log('Current thoughts:', thoughts);\n\n  return (\n    <AppContainer>\n      <WhiteboardContainer>\n        <Whiteboard thoughts={thoughts} />\n      </WhiteboardContainer>\n      <ChatContainer>\n        <ChatInput onThoughtSubmit={handleThoughtSubmit} />\n      </ChatContainer>\n    </AppContainer>\n  );\n};\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGL,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,YAAY;AAOlB,MAAMG,mBAAmB,GAAGR,MAAM,CAACM,GAAG;AACtC;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,mBAAmB;AAOzB,MAAME,aAAa,GAAGV,MAAM,CAACM,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GALID,aAAa;AAOnB,MAAME,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAMpC,EAAE,CAAC;EAEP,MAAMiB,mBAAmB,GAAIC,OAAe,IAAK;IAC/CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,OAAO,CAAC;IAE3C,IAAIA,OAAO,CAACG,UAAU,CAAC,GAAG,CAAC,EAAE;MAC3B;MACA,MAAM,CAACC,OAAO,EAAE,GAAGC,IAAI,CAAC,GAAGL,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;MACtDN,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,OAAO,EAAE,OAAO,EAAEC,IAAI,CAAC;MAC/C;IACF;;IAEA;IACA,MAAMG,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEZ,OAAO;MACba,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,QAAiB;MACvBC,QAAQ,EAAE;IACZ,CAAC;IAEDd,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEM,UAAU,CAAC;IAC9CV,WAAW,CAACkB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAER,UAAU,CAAC,CAAC;EAC5C,CAAC;EAEDP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,QAAQ,CAAC;EAE1C,oBACEV,OAAA,CAACC,YAAY;IAAA6B,QAAA,gBACX9B,OAAA,CAACI,mBAAmB;MAAA0B,QAAA,eAClB9B,OAAA,CAACH,UAAU;QAACa,QAAQ,EAAEA;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACtBlC,OAAA,CAACM,aAAa;MAAAwB,QAAA,eACZ9B,OAAA,CAACF,SAAS;QAACqC,eAAe,EAAEvB;MAAoB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEnB,CAAC;AAACzB,EAAA,CA5CID,GAAa;AAAA4B,GAAA,GAAb5B,GAAa;AA8CnB,eAAeA,GAAG;AAAC,IAAAL,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAA6B,GAAA;AAAAC,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}