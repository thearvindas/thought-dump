{"ast":null,"code":"var _jsxFileName = \"/Users/arvindas/Projects/thought-dump/src/components/ChatInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n_c = InputContainer;\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n_c2 = InputWrapper;\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  border: 1px solid #dee2e6;\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #86b7fe;\n    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n  }\n`;\n_c3 = Input;\nconst CharacterCounter = styled.div`\n  font-size: 0.875rem;\n  color: #6c757d;\n  text-align: right;\n`;\n_c4 = CharacterCounter;\nconst CommandHint = styled.div`\n  position: absolute;\n  top: -1.5rem;\n  left: 0;\n  font-size: 0.75rem;\n  color: #6c757d;\n  opacity: ${props => props.visible ? 1 : 0};\n  transition: opacity 0.2s ease;\n`;\n_c5 = CommandHint;\nconst ChatInput = ({\n  onThoughtSubmit\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [showCommandHint, setShowCommandHint] = useState(false);\n  const inputRef = useRef(null);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setInput(value);\n    setCharacterCount(value.length);\n    setShowCommandHint(value.startsWith('/'));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Form submitted with input:', input);\n    if (!input.trim()) {\n      console.log('Empty input, ignoring');\n      return;\n    }\n    console.log('Calling onThoughtSubmit with:', input);\n    onThoughtSubmit(input);\n    setInput('');\n    setCharacterCount(0);\n    setShowCommandHint(false);\n  };\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(InputWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(CommandHint, {\n          visible: showCommandHint,\n          children: \"Available commands: /shake, /clear, /color, /size, /float, /pin, /export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          ref: inputRef,\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your thought or use / for commands...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharacterCounter, {\n      children: [characterCount, \" characters\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"w6b/fJ585ng8PNRAYMCM0vPfQI4=\");\n_c6 = ChatInput;\nexport default ChatInput;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"InputContainer\");\n$RefreshReg$(_c2, \"InputWrapper\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"CharacterCounter\");\n$RefreshReg$(_c5, \"CommandHint\");\n$RefreshReg$(_c6, \"ChatInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","jsxDEV","_jsxDEV","InputContainer","div","_c","InputWrapper","_c2","Input","input","_c3","CharacterCounter","_c4","CommandHint","props","visible","_c5","ChatInput","onThoughtSubmit","_s","setInput","characterCount","setCharacterCount","showCommandHint","setShowCommandHint","inputRef","handleInputChange","e","value","target","length","startsWith","handleSubmit","preventDefault","console","log","trim","current","focus","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","onChange","placeholder","_c6","$RefreshReg$"],"sources":["/Users/arvindas/Projects/thought-dump/src/components/ChatInput.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  border: 1px solid #dee2e6;\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #86b7fe;\n    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n  }\n`;\n\nconst CharacterCounter = styled.div`\n  font-size: 0.875rem;\n  color: #6c757d;\n  text-align: right;\n`;\n\nconst CommandHint = styled.div<{ visible: boolean }>`\n  position: absolute;\n  top: -1.5rem;\n  left: 0;\n  font-size: 0.75rem;\n  color: #6c757d;\n  opacity: ${props => (props.visible ? 1 : 0)};\n  transition: opacity 0.2s ease;\n`;\n\ninterface ChatInputProps {\n  onThoughtSubmit: (thought: string) => void;\n}\n\nconst ChatInput: React.FC<ChatInputProps> = ({ onThoughtSubmit }) => {\n  const [input, setInput] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [showCommandHint, setShowCommandHint] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setInput(value);\n    setCharacterCount(value.length);\n    setShowCommandHint(value.startsWith('/'));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Form submitted with input:', input);\n    \n    if (!input.trim()) {\n      console.log('Empty input, ignoring');\n      return;\n    }\n\n    console.log('Calling onThoughtSubmit with:', input);\n    onThoughtSubmit(input);\n    setInput('');\n    setCharacterCount(0);\n    setShowCommandHint(false);\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <InputContainer>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <CommandHint visible={showCommandHint}>\n            Available commands: /shake, /clear, /color, /size, /float, /pin, /export\n          </CommandHint>\n          <Input\n            ref={inputRef}\n            type=\"text\"\n            value={input}\n            onChange={handleInputChange}\n            placeholder=\"Type your thought or use / for commands...\"\n          />\n        </InputWrapper>\n      </form>\n      <CharacterCounter>{characterCount} characters</CharacterCounter>\n    </InputContainer>\n  );\n};\n\nexport default ChatInput; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAG;AACjC;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,cAAc;AAMpB,MAAMG,YAAY,GAAGN,MAAM,CAACI,GAAG;AAC/B;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,YAAY;AAMlB,MAAME,KAAK,GAAGR,MAAM,CAACS,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,KAAK;AAeX,MAAMG,gBAAgB,GAAGX,MAAM,CAACI,GAAG;AACnC;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAJID,gBAAgB;AAMtB,MAAME,WAAW,GAAGb,MAAM,CAACI,GAAyB;AACpD;AACA;AACA;AACA;AACA;AACA,aAAaU,KAAK,IAAKA,KAAK,CAACC,OAAO,GAAG,CAAC,GAAG,CAAE;AAC7C;AACA,CAAC;AAACC,GAAA,GARIH,WAAW;AAcjB,MAAMI,SAAmC,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM4B,QAAQ,GAAG3B,MAAM,CAAmB,IAAI,CAAC;EAE/C,MAAM4B,iBAAiB,GAAIC,CAAsC,IAAK;IACpE,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BR,QAAQ,CAACQ,KAAK,CAAC;IACfN,iBAAiB,CAACM,KAAK,CAACE,MAAM,CAAC;IAC/BN,kBAAkB,CAACI,KAAK,CAACG,UAAU,CAAC,GAAG,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,YAAY,GAAIL,CAAkB,IAAK;IAC3CA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE1B,KAAK,CAAC;IAEhD,IAAI,CAACA,KAAK,CAAC2B,IAAI,CAAC,CAAC,EAAE;MACjBF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC;IACF;IAEAD,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE1B,KAAK,CAAC;IACnDS,eAAe,CAACT,KAAK,CAAC;IACtBW,QAAQ,CAAC,EAAE,CAAC;IACZE,iBAAiB,CAAC,CAAC,CAAC;IACpBE,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAI0B,QAAQ,CAACY,OAAO,EAAE;MACpBZ,QAAQ,CAACY,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpC,OAAA,CAACC,cAAc;IAAAoC,QAAA,gBACbrC,OAAA;MAAMsC,QAAQ,EAAER,YAAa;MAAAO,QAAA,eAC3BrC,OAAA,CAACI,YAAY;QAAAiC,QAAA,gBACXrC,OAAA,CAACW,WAAW;UAACE,OAAO,EAAEQ,eAAgB;UAAAgB,QAAA,EAAC;QAEvC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACd1C,OAAA,CAACM,KAAK;UACJqC,GAAG,EAAEpB,QAAS;UACdqB,IAAI,EAAC,MAAM;UACXlB,KAAK,EAAEnB,KAAM;UACbsC,QAAQ,EAAErB,iBAAkB;UAC5BsB,WAAW,EAAC;QAA4C;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACP1C,OAAA,CAACS,gBAAgB;MAAA4B,QAAA,GAAElB,cAAc,EAAC,aAAW;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAErB,CAAC;AAACzB,EAAA,CAtDIF,SAAmC;AAAAgC,GAAA,GAAnChC,SAAmC;AAwDzC,eAAeA,SAAS;AAAC,IAAAZ,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAA7C,EAAA;AAAA6C,YAAA,CAAA3C,GAAA;AAAA2C,YAAA,CAAAxC,GAAA;AAAAwC,YAAA,CAAAtC,GAAA;AAAAsC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}